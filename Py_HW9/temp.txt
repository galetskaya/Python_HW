…or create a new repository on the command line

echo "# TiRastaMafia-C-sharp-homework6-" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/TiRastaMafia/TiRastaMafia-C-sharp-homework6-.git
git push -u origin main

…or push an existing repository from the command line

git remote add origin https://github.com/TiRastaMafia/TiRastaMafia-C-sharp-homework6-.git
git branch -M main
git push -u origin main

…or import code from another repository

You can initialize this repository with code from a Subversion, Mercurial, or TFS project.








//___________________________________________________________________________________________________________________________

// Ctrl + / комментарии (добавить/убрать)

//___________________________________________________________________________________________________________________________

//___________________________________________________________________________________________________________________________

// Задача 2: Напишите программу, которая на вход принимает два числа и выдаёт, какое число большее, а какое меньшее.

// a = 5; b = 7 -> max = 7
//___________________________________________________________________________________________________________________________

Console.Write("Введите число 1 - ");
int num1 = int.Parse(Console.ReadLine());
Console.Write("Введите число 2 - ");
int num2 = int.Parse(Console.ReadLine());
if  (num1 >= num2)
{
Console.WriteLine("мах = " + num1);
}
else
{
Console.WriteLine("мах = " + num2);
}


//___________________________________________________________________________________________________________________________

// Задача 4: Напишите программу, которая принимает на вход три числа и выдаёт максимальное из этих чисел.

// 44 5 78 -> 78
//___________________________________________________________________________________________________________________________

Console.Write("Введите число 1 - ");
int num1 = int.Parse(Console.ReadLine());
Console.Write("Введите число 2 - ");
int num2 = int.Parse(Console.ReadLine());
Console.Write("Введите число 3 - ");
int num3 = int.Parse(Console.ReadLine());
int max = 0;
 if (num1 >= num2 && num1 >= num3)
{
    max = num1;
}
else if (num2 >= num1 && num2 >=num3 )
    {
    max = num2;
    } 
else if (num3 >= num1 && num3 >= num2)
    {
    max = num3;
    }
Console.WriteLine("Максимальное число - " + max);


//___________________________________________________________________________________________________________________________

// Задача 6: Напишите программу, которая на вход принимает число и выдаёт, является ли число чётным (делится ли оно на два без остатка).

// 4 -> да
// -3 -> нет
// 7 -> нет
//___________________________________________________________________________________________________________________________

Console.Write("Введите число - ");
int num1 = int.Parse(Console.ReadLine());
if  (num1 % 2 == 0)
{
Console.WriteLine(num1 + " -> да");
}
else
{
Console.WriteLine(num1 + " -> нет");
}

//___________________________________________________________________________________________________________________________

// Задача 8: Напишите программу, которая на вход принимает число (N), а на выходе показывает все чётные числа от 1 до N.

// 5 -> 2, 4
// 8 -> 2, 4, 6, 8
//___________________________________________________________________________________________________________________________

Console.Write("Введите число N - ");
int num1 = int.Parse(Console.ReadLine());
Console.Write(num1 + " -> "); 
for (int StartPosition = 1; StartPosition <= num1; StartPosition++)    
if (StartPosition % 2 == 0) 
Console.Write(StartPosition + ", ");




















int N = 5;	// Поменять размер матрицы
int num = 1;
int sizeMarrix = N - 2;
// int delta = 0; // Поменять рамку заполнения где 1 самая полная
int[,] numbers = new int[N, N];

int rows = numbers.GetUpperBound(0) + 1;    // количество строк
int columns = numbers.GetUpperBound(1) + 1; // количество столбцов потому что 0 уже занят строкой

for (int delta = 0; delta < N - 2; delta++){
    for (int i = 0 + delta; i < N - delta; i++){
        numbers[0 + delta, i] = num;
        num++;
    }
    num--; // уменьшение num для исключения наложения при переключении стороны
    for (int i = 0 + delta; i < N - delta; i++){
        numbers[i, 4 - delta] = num;
        num++;
    }
    num--;
    for (int i = N - 1 - delta; i >= 0 + delta; i--){
        numbers[4 - delta, i] = num;
        num++;
    }
    num--;
    for (int i = N - 1 - delta; i >= 1 + delta; i--){
        numbers[i, 0 + delta] = num;
        num++;
    }
    num--;
    num++;
}
// Вывод резудьтата
for (int i = 0; i < rows; i++){
    for (int j = 0; j < columns; j++){
        Console.Write($"{numbers[i, j]} \t");
    }
    Console.WriteLine();
}












Console.WriteLine("Введите число");
int s = Convert.ToInt32(Console.ReadLine());
int num (int s)
    {
    int count = 0;
    if (s == 0) count = 1;
    while(s != 0)

        {
            s = s / 10;
            count = count + 1;
            
        }
    return count; 
    }       
Console.Write(num(s));




void PrintArray(int[] col)
{
    int count = col.Length;
    int position = 0;
    while (position < count)
    {
        Console.Write($"{col[position]} ");
        position++;
    }
}

Console.WriteLine("Введите целое число");
int N = Convert.ToInt32(Console.ReadLine());
int[] factor(int N)
{

    int[] myArray = new int[N];
    int F = 1;
    for (int i = 1; i <= N; i++)
    {
        F = F * i;
        myArray[i - 1] = F;
    }
    return myArray;
}
PrintArray(factor(N));










Console.WriteLine("Введите число: ");
int x = Convert.ToInt32(Console.ReadLine());

int[] create_mas (int x)
    {
        int [] array = new int [x];
        for (int i = 0; i < x; i++)
            {
                array[i] = new Random().Next(0,2);
            }
        return array; 
    } 

void PrintArray(int[] col)
{
    int count = col.Length;
    int position = 0;
    while (position < count)
    {
        Console.Write($"{col[position]} ");
        position++;
    }
}
PrintArray(create_mas(x));

         
+++++++++++++++++++++++++++++++++++++++++
int i = 0;

        for (i = 1; i != B; i++)
        {
            int result = result * A;
        }
        return result;

+++++++++++++++++++++++++++++++++++++

Функция сложения=======================================================
class Program
{
    static int Sum(int a, int b)
    {

        int result = a + a;

        return result;
    }



    static void Main(string[] args)
    {
        int a, b;
        int c;

        a = int.Parse(Console.ReadLine());
        b = int.Parse(Console.ReadLine());

        c = Sum(a, b);

        Console.WriteLine(c);
        Console.WriteLine("============================");
    }


}
=================================================================================================
23 задача 

// Console.WriteLine("Введите число A");
// int A = Convert.ToInt32(Console.ReadLine());
// Console.WriteLine("Введите число B");
// int B = Convert.ToInt32(Console.ReadLine());

// int numt(int A, int B)
// {
//     int result = A;
//     int i = 0;
//     for (i = 1; i != B; i++)
//     {
//         result = result * A;
//     }
//     return result;
// }
// Console.Write(numt(A, B));


=============================================================================================

СОртировка массива=======================================================================================
int[] arr = { 1, 5, 4, 3, 2, 6, 7, 1, 1 };

void PrintArray(int[] array)
{
    int count = array.Length;

    for (int i = 0; i < count; i++)
    {
        Console.Write($"{array[i]} ");
    }
    Console.WriteLine();
}
void SelectionSort(int[] arr)
{
    for (int i = 0; i < arr.Length - 1; i++)
    {
        int miniPosition = i;
        for (int j = i + 1; j < arr.Length; j++)
        {
            if (arr[j] < arr[miniPosition]) miniPosition = j;
        }
        int temporary = arr[i];
        arr[i] = arr[miniPosition];
        arr[miniPosition] = temporary;
    }
}

PrintArray(arr);
SelectionSort(arr);
PrintArray(arr);



=========================================== Двумерные массивы ===========================

Задача 46: Задайте двумерный массив размером m×n, заполненный случайными целыми числами.
m = 3, n = 4.
1 4 8 19
5 -2 33 -2
77 3 8 1
*/
Console.WriteLine("введите количество строк");
int m=Convert.ToInt32(Console.ReadLine());
Console.WriteLine("введите количество столбцов");
int n=Convert.ToInt32(Console.ReadLine());
int [,] array = new int [m,n];

void PrintArrayRazm(int[,] array)
{
    for (int i=0; i<array.GetLength(0);i++)
    {
         for (int j=0; j<array.GetLength(1);j++)
        {
            Console.Write($"{array[i,j]} ");
           
        }
        Console.WriteLine();
    }
}

void FillArray(int [,] array)
{
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            array[i, j] = new Random().Next(1, 10);
        }
    }

}
FillArray(array);
PrintArrayRazm(array);


==================================================================================================
// Задача 49: Задайте двумерный массив. Найдите элементы, у которых оба индекса чётные, и замените эти элементы на их квадраты.
// Например, изначально массив
//  выглядел вот так:
// 1 4 7 2
// 5 9 2 3
// 8 4 2 4

Console.WriteLine("введите количество строк");
int m=Convert.ToInt32(Console.ReadLine());
Console.WriteLine("введите количество столбцов");
int n=Convert.ToInt32(Console.ReadLine());
int [,] array = new int [m,n];

void PrintArrayRazm(int[,] array)
{
    for (int i=0; i<array.GetLength(0);i++)
    {
         for (int j=0; j<array.GetLength(1);j++)
        {
            Console.Write($"{array[i,j]} ");
           
        }
        Console.WriteLine();
    }
}

void FillArray(int [,] array)
{
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            // чем идет заполнение матрицы
            
            array[i, j] = new Random().Next(1, 10);
        }
    }
}

void ChangeArray(int [,] array)
{
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            if (i % 2 != 0 && j % 2 != 0) (array[i, j]) *= (array[i, j]) ;      
        }
    }
}



FillArray(array);
PrintArrayRazm(array);
Console.WriteLine("");
ChangeArray(array);
PrintArrayRazm(array);










/*№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№       Задача 63:           №№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№*/
//  Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от 1 до N.
// N = 5 -> "1, 2, 3, 4, 5"
// N = 6 -> "1, 2, 3, 4, 5, 6"

// Решение для 63 задачи

// static string NumbersRec(int b)
//     {
//      if (1 <= b) return NumbersRec(b-1) + $"{b}, ";
//      else return string.Empty;
//     }
// Console.WriteLine(NumbersRec(5));

// для суммы элементов
// int SumFor(int n)
// {
//  int result = 0;
//  for (int i = 1; i <= n; i++) result += i;
//  return result;
// }
// int SumRec(int n)
// {
//  if (n == 0) return 0;
//  else return n + SumRec(n - 1);
// }
// Console.WriteLine(SumFor(3));

/*№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№       Задача 65:           №№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№*/
//  Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N.
// M = 1; N = 5 -> "1, 2, 3, 4, 5"
// M = 4; N = 8 -> "4, 5, 6, 7, 8"

static string NumbersRec(int a, int b)
    {
     if (a <= b) return NumbersRec(a, b-1) + $"{b}, ";
     else return string.Empty;
    }
Console.WriteLine(NumbersRec(3,7));

/*№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№       Задача 67:           №№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№*/
// Задача 67: Напишите программу, которая будет принимать на вход число и возвращать сумму его цифр.
// 453 -> 12
// 45 -> 9

int SumNum(int n)
{
    if (n == 0) return 0;
    else return n%10 + SumNum(n/10);
}
Console.WriteLine(SumNum(456));



/*№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№       Задача 69:           №№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№№*/


int PowerRec(int a, int n)
{ //return n == 0 ? 1 : PowerRec(a, n - 1) * a;
 if (n == 0) return 1;
 else return PowerRec(a, n - 1) * a;
}
Console.WriteLine(PowerRec(2,3));

